"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/dnd-multi-backend";
exports.ids = ["vendor-chunks/dnd-multi-backend"];
exports.modules = {

/***/ "(ssr)/./node_modules/dnd-multi-backend/dist/index.js":
/*!******************************************************!*\
  !*** ./node_modules/dnd-multi-backend/dist/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HTML5DragTransition: () => (/* binding */ L),\n/* harmony export */   MouseTransition: () => (/* binding */ O),\n/* harmony export */   MultiBackend: () => (/* binding */ P),\n/* harmony export */   PointerTransition: () => (/* binding */ C),\n/* harmony export */   TouchTransition: () => (/* binding */ S),\n/* harmony export */   createTransition: () => (/* binding */ m)\n/* harmony export */ });\nvar D=(r,n,e)=>{if(!n.has(r))throw TypeError(\"Cannot \"+e)};var t=(r,n,e)=>(D(r,n,\"read from private field\"),e?e.call(r):n.get(r)),o=(r,n,e)=>{if(n.has(r))throw TypeError(\"Cannot add the same private member more than once\");n instanceof WeakSet?n.add(r):n.set(r,e)},p=(r,n,e,i)=>(D(r,n,\"write to private field\"),i?i.call(r,e):n.set(r,e),e);var w,b=class{constructor(){o(this,w,void 0);this.register=n=>{t(this,w).push(n)};this.unregister=n=>{let e;for(;(e=t(this,w).indexOf(n))!==-1;)t(this,w).splice(e,1)};this.backendChanged=n=>{for(let e of t(this,w))e.backendChanged(n)};p(this,w,[])}};w=new WeakMap;var a,f,c,d,h,x,T,E,v,y,g,l=class l{constructor(n,e,i){o(this,a,void 0);o(this,f,void 0);o(this,c,void 0);o(this,d,void 0);o(this,h,void 0);o(this,x,(n,e,i)=>{if(!i.backend)throw new Error(`You must specify a 'backend' property in your Backend entry: ${JSON.stringify(i)}`);let u=i.backend(n,e,i.options),s=i.id,k=!i.id&&u&&u.constructor;if(k&&(s=u.constructor.name),s)k&&console.warn(`Deprecation notice: You are using a pipeline which doesn't include backends' 'id'.\n        This might be unsupported in the future, please specify 'id' explicitely for every backend.`);else throw new Error(`You must specify an 'id' property in your Backend entry: ${JSON.stringify(i)}\n        see this guide: https://github.com/louisbrunner/dnd-multi-backend/tree/master/packages/react-dnd-multi-backend#migrating-from-5xx`);if(t(this,c)[s])throw new Error(`You must specify a unique 'id' property in your Backend entry:\n        ${JSON.stringify(i)} (conflicts with: ${JSON.stringify(t(this,c)[s])})`);return{id:s,instance:u,preview:i.preview??!1,transition:i.transition,skipDispatchOnTransition:i.skipDispatchOnTransition??!1}});this.setup=()=>{if(!(typeof window>\"u\")){if(l.isSetUp)throw new Error(\"Cannot have two MultiBackends at the same time.\");l.isSetUp=!0,t(this,T).call(this,window),t(this,c)[t(this,a)].instance.setup()}};this.teardown=()=>{typeof window>\"u\"||(l.isSetUp=!1,t(this,E).call(this,window),t(this,c)[t(this,a)].instance.teardown())};this.connectDragSource=(n,e,i)=>t(this,g).call(this,\"connectDragSource\",n,e,i);this.connectDragPreview=(n,e,i)=>t(this,g).call(this,\"connectDragPreview\",n,e,i);this.connectDropTarget=(n,e,i)=>t(this,g).call(this,\"connectDropTarget\",n,e,i);this.profile=()=>t(this,c)[t(this,a)].instance.profile();this.previewEnabled=()=>t(this,c)[t(this,a)].preview;this.previewsList=()=>t(this,f);this.backendsList=()=>t(this,d);o(this,T,n=>{t(this,d).forEach(e=>{e.transition&&n.addEventListener(e.transition.event,t(this,v))})});o(this,E,n=>{t(this,d).forEach(e=>{e.transition&&n.removeEventListener(e.transition.event,t(this,v))})});o(this,v,n=>{let e=t(this,a);if(t(this,d).some(i=>i.id!==t(this,a)&&i.transition&&i.transition.check(n)?(p(this,a,i.id),!0):!1),t(this,a)!==e){t(this,c)[e].instance.teardown(),Object.keys(t(this,h)).forEach(k=>{let B=t(this,h)[k];B.unsubscribe(),B.unsubscribe=t(this,y).call(this,B.func,...B.args)}),t(this,f).backendChanged(this);let i=t(this,c)[t(this,a)];if(i.instance.setup(),i.skipDispatchOnTransition)return;let u=n.constructor,s=new u(n.type,n);n.target?.dispatchEvent(s)}});o(this,y,(n,e,i,u)=>t(this,c)[t(this,a)].instance[n](e,i,u));o(this,g,(n,e,i,u)=>{let s=`${n}_${e}`,k=t(this,y).call(this,n,e,i,u);return t(this,h)[s]={func:n,args:[e,i,u],unsubscribe:k},()=>{t(this,h)[s].unsubscribe(),delete t(this,h)[s]}});if(!i||!i.backends||i.backends.length<1)throw new Error(`You must specify at least one Backend, if you are coming from 2.x.x (or don't understand this error)\n        see this guide: https://github.com/louisbrunner/dnd-multi-backend/tree/master/packages/react-dnd-multi-backend#migrating-from-2xx`);p(this,f,new b),p(this,c,{}),p(this,d,[]),i.backends.forEach(u=>{let s=t(this,x).call(this,n,e,u);t(this,c)[s.id]=s,t(this,d).push(s)}),p(this,a,t(this,d)[0].id),p(this,h,{})}};a=new WeakMap,f=new WeakMap,c=new WeakMap,d=new WeakMap,h=new WeakMap,x=new WeakMap,T=new WeakMap,E=new WeakMap,v=new WeakMap,y=new WeakMap,g=new WeakMap,l.isSetUp=!1;var M=l;var P=(r,n,e)=>new M(r,n,e);var m=(r,n)=>({event:r,check:n});var S=m(\"touchstart\",r=>{let n=r;return n.touches!==null&&n.touches!==void 0}),L=m(\"dragstart\",r=>r.type.indexOf(\"drag\")!==-1||r.type.indexOf(\"drop\")!==-1),O=m(\"mousedown\",r=>r.type.indexOf(\"touch\")===-1&&r.type.indexOf(\"mouse\")!==-1),C=m(\"pointerdown\",r=>r.pointerType==\"mouse\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZG5kLW11bHRpLWJhY2tlbmQvZGlzdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSxnQkFBZ0IsMkNBQTJDLG1GQUFtRixpRkFBaUYseUNBQXlDLDJFQUEyRSxjQUFjLGNBQWMsaUJBQWlCLGtCQUFrQixtQkFBbUIsb0JBQW9CLE1BQU0sS0FBSyw4QkFBOEIsd0JBQXdCLHdCQUF3Qiw0Q0FBNEMsZUFBZSxjQUFjLG9DQUFvQyxtQkFBbUIsaUJBQWlCLGlCQUFpQixpQkFBaUIsaUJBQWlCLGlCQUFpQixtQkFBbUIsOEZBQThGLGtCQUFrQixHQUFHLGdFQUFnRTtBQUM3NkIsc0dBQXNHLGlGQUFpRjtBQUN2TCw0SUFBNEk7QUFDNUksVUFBVSxtQkFBbUIsbUJBQW1CLDZCQUE2QixJQUFJLE9BQU8sdUhBQXVILEVBQUUsZ0JBQWdCLHlCQUF5QixnRkFBZ0YsaUZBQWlGLG1CQUFtQix3R0FBd0csK0VBQStFLGlGQUFpRiwrRUFBK0UseURBQXlELHFEQUFxRCxnQ0FBZ0MsZ0NBQWdDLGFBQWEsc0JBQXNCLCtEQUErRCxFQUFFLEVBQUUsYUFBYSxzQkFBc0Isa0VBQWtFLEVBQUUsRUFBRSxhQUFhLGdCQUFnQixrSEFBa0gsb0VBQW9FLG1CQUFtQixvRUFBb0UsaUNBQWlDLDJCQUEyQix3REFBd0Qsc0NBQXNDLDRCQUE0QixFQUFFLDZEQUE2RCxxQkFBcUIsU0FBUyxFQUFFLEdBQUcsRUFBRSxpQ0FBaUMscUJBQXFCLGtDQUFrQyxNQUFNLGdEQUFnRCxFQUFFO0FBQ3QxRCw0SUFBNEksMkJBQTJCLHNDQUFzQyxpQ0FBaUMsb0NBQW9DLHVDQUF1QyxJQUFJLHVLQUF1SyxRQUFRLDRCQUE0QixlQUFlLGdCQUFnQixFQUFFLHlCQUF5QixRQUFRLDRDQUE0QywyTUFBcVYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWFjdC8uL25vZGVfbW9kdWxlcy9kbmQtbXVsdGktYmFja2VuZC9kaXN0L2luZGV4LmpzP2IwY2MiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIEQ9KHIsbixlKT0+e2lmKCFuLmhhcyhyKSl0aHJvdyBUeXBlRXJyb3IoXCJDYW5ub3QgXCIrZSl9O3ZhciB0PShyLG4sZSk9PihEKHIsbixcInJlYWQgZnJvbSBwcml2YXRlIGZpZWxkXCIpLGU/ZS5jYWxsKHIpOm4uZ2V0KHIpKSxvPShyLG4sZSk9PntpZihuLmhhcyhyKSl0aHJvdyBUeXBlRXJyb3IoXCJDYW5ub3QgYWRkIHRoZSBzYW1lIHByaXZhdGUgbWVtYmVyIG1vcmUgdGhhbiBvbmNlXCIpO24gaW5zdGFuY2VvZiBXZWFrU2V0P24uYWRkKHIpOm4uc2V0KHIsZSl9LHA9KHIsbixlLGkpPT4oRChyLG4sXCJ3cml0ZSB0byBwcml2YXRlIGZpZWxkXCIpLGk/aS5jYWxsKHIsZSk6bi5zZXQocixlKSxlKTt2YXIgdyxiPWNsYXNze2NvbnN0cnVjdG9yKCl7byh0aGlzLHcsdm9pZCAwKTt0aGlzLnJlZ2lzdGVyPW49Pnt0KHRoaXMsdykucHVzaChuKX07dGhpcy51bnJlZ2lzdGVyPW49PntsZXQgZTtmb3IoOyhlPXQodGhpcyx3KS5pbmRleE9mKG4pKSE9PS0xOyl0KHRoaXMsdykuc3BsaWNlKGUsMSl9O3RoaXMuYmFja2VuZENoYW5nZWQ9bj0+e2ZvcihsZXQgZSBvZiB0KHRoaXMsdykpZS5iYWNrZW5kQ2hhbmdlZChuKX07cCh0aGlzLHcsW10pfX07dz1uZXcgV2Vha01hcDt2YXIgYSxmLGMsZCxoLHgsVCxFLHYseSxnLGw9Y2xhc3MgbHtjb25zdHJ1Y3RvcihuLGUsaSl7byh0aGlzLGEsdm9pZCAwKTtvKHRoaXMsZix2b2lkIDApO28odGhpcyxjLHZvaWQgMCk7byh0aGlzLGQsdm9pZCAwKTtvKHRoaXMsaCx2b2lkIDApO28odGhpcyx4LChuLGUsaSk9PntpZighaS5iYWNrZW5kKXRocm93IG5ldyBFcnJvcihgWW91IG11c3Qgc3BlY2lmeSBhICdiYWNrZW5kJyBwcm9wZXJ0eSBpbiB5b3VyIEJhY2tlbmQgZW50cnk6ICR7SlNPTi5zdHJpbmdpZnkoaSl9YCk7bGV0IHU9aS5iYWNrZW5kKG4sZSxpLm9wdGlvbnMpLHM9aS5pZCxrPSFpLmlkJiZ1JiZ1LmNvbnN0cnVjdG9yO2lmKGsmJihzPXUuY29uc3RydWN0b3IubmFtZSkscylrJiZjb25zb2xlLndhcm4oYERlcHJlY2F0aW9uIG5vdGljZTogWW91IGFyZSB1c2luZyBhIHBpcGVsaW5lIHdoaWNoIGRvZXNuJ3QgaW5jbHVkZSBiYWNrZW5kcycgJ2lkJy5cbiAgICAgICAgVGhpcyBtaWdodCBiZSB1bnN1cHBvcnRlZCBpbiB0aGUgZnV0dXJlLCBwbGVhc2Ugc3BlY2lmeSAnaWQnIGV4cGxpY2l0ZWx5IGZvciBldmVyeSBiYWNrZW5kLmApO2Vsc2UgdGhyb3cgbmV3IEVycm9yKGBZb3UgbXVzdCBzcGVjaWZ5IGFuICdpZCcgcHJvcGVydHkgaW4geW91ciBCYWNrZW5kIGVudHJ5OiAke0pTT04uc3RyaW5naWZ5KGkpfVxuICAgICAgICBzZWUgdGhpcyBndWlkZTogaHR0cHM6Ly9naXRodWIuY29tL2xvdWlzYnJ1bm5lci9kbmQtbXVsdGktYmFja2VuZC90cmVlL21hc3Rlci9wYWNrYWdlcy9yZWFjdC1kbmQtbXVsdGktYmFja2VuZCNtaWdyYXRpbmctZnJvbS01eHhgKTtpZih0KHRoaXMsYylbc10pdGhyb3cgbmV3IEVycm9yKGBZb3UgbXVzdCBzcGVjaWZ5IGEgdW5pcXVlICdpZCcgcHJvcGVydHkgaW4geW91ciBCYWNrZW5kIGVudHJ5OlxuICAgICAgICAke0pTT04uc3RyaW5naWZ5KGkpfSAoY29uZmxpY3RzIHdpdGg6ICR7SlNPTi5zdHJpbmdpZnkodCh0aGlzLGMpW3NdKX0pYCk7cmV0dXJue2lkOnMsaW5zdGFuY2U6dSxwcmV2aWV3OmkucHJldmlldz8/ITEsdHJhbnNpdGlvbjppLnRyYW5zaXRpb24sc2tpcERpc3BhdGNoT25UcmFuc2l0aW9uOmkuc2tpcERpc3BhdGNoT25UcmFuc2l0aW9uPz8hMX19KTt0aGlzLnNldHVwPSgpPT57aWYoISh0eXBlb2Ygd2luZG93PlwidVwiKSl7aWYobC5pc1NldFVwKXRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBoYXZlIHR3byBNdWx0aUJhY2tlbmRzIGF0IHRoZSBzYW1lIHRpbWUuXCIpO2wuaXNTZXRVcD0hMCx0KHRoaXMsVCkuY2FsbCh0aGlzLHdpbmRvdyksdCh0aGlzLGMpW3QodGhpcyxhKV0uaW5zdGFuY2Uuc2V0dXAoKX19O3RoaXMudGVhcmRvd249KCk9Pnt0eXBlb2Ygd2luZG93PlwidVwifHwobC5pc1NldFVwPSExLHQodGhpcyxFKS5jYWxsKHRoaXMsd2luZG93KSx0KHRoaXMsYylbdCh0aGlzLGEpXS5pbnN0YW5jZS50ZWFyZG93bigpKX07dGhpcy5jb25uZWN0RHJhZ1NvdXJjZT0obixlLGkpPT50KHRoaXMsZykuY2FsbCh0aGlzLFwiY29ubmVjdERyYWdTb3VyY2VcIixuLGUsaSk7dGhpcy5jb25uZWN0RHJhZ1ByZXZpZXc9KG4sZSxpKT0+dCh0aGlzLGcpLmNhbGwodGhpcyxcImNvbm5lY3REcmFnUHJldmlld1wiLG4sZSxpKTt0aGlzLmNvbm5lY3REcm9wVGFyZ2V0PShuLGUsaSk9PnQodGhpcyxnKS5jYWxsKHRoaXMsXCJjb25uZWN0RHJvcFRhcmdldFwiLG4sZSxpKTt0aGlzLnByb2ZpbGU9KCk9PnQodGhpcyxjKVt0KHRoaXMsYSldLmluc3RhbmNlLnByb2ZpbGUoKTt0aGlzLnByZXZpZXdFbmFibGVkPSgpPT50KHRoaXMsYylbdCh0aGlzLGEpXS5wcmV2aWV3O3RoaXMucHJldmlld3NMaXN0PSgpPT50KHRoaXMsZik7dGhpcy5iYWNrZW5kc0xpc3Q9KCk9PnQodGhpcyxkKTtvKHRoaXMsVCxuPT57dCh0aGlzLGQpLmZvckVhY2goZT0+e2UudHJhbnNpdGlvbiYmbi5hZGRFdmVudExpc3RlbmVyKGUudHJhbnNpdGlvbi5ldmVudCx0KHRoaXMsdikpfSl9KTtvKHRoaXMsRSxuPT57dCh0aGlzLGQpLmZvckVhY2goZT0+e2UudHJhbnNpdGlvbiYmbi5yZW1vdmVFdmVudExpc3RlbmVyKGUudHJhbnNpdGlvbi5ldmVudCx0KHRoaXMsdikpfSl9KTtvKHRoaXMsdixuPT57bGV0IGU9dCh0aGlzLGEpO2lmKHQodGhpcyxkKS5zb21lKGk9PmkuaWQhPT10KHRoaXMsYSkmJmkudHJhbnNpdGlvbiYmaS50cmFuc2l0aW9uLmNoZWNrKG4pPyhwKHRoaXMsYSxpLmlkKSwhMCk6ITEpLHQodGhpcyxhKSE9PWUpe3QodGhpcyxjKVtlXS5pbnN0YW5jZS50ZWFyZG93bigpLE9iamVjdC5rZXlzKHQodGhpcyxoKSkuZm9yRWFjaChrPT57bGV0IEI9dCh0aGlzLGgpW2tdO0IudW5zdWJzY3JpYmUoKSxCLnVuc3Vic2NyaWJlPXQodGhpcyx5KS5jYWxsKHRoaXMsQi5mdW5jLC4uLkIuYXJncyl9KSx0KHRoaXMsZikuYmFja2VuZENoYW5nZWQodGhpcyk7bGV0IGk9dCh0aGlzLGMpW3QodGhpcyxhKV07aWYoaS5pbnN0YW5jZS5zZXR1cCgpLGkuc2tpcERpc3BhdGNoT25UcmFuc2l0aW9uKXJldHVybjtsZXQgdT1uLmNvbnN0cnVjdG9yLHM9bmV3IHUobi50eXBlLG4pO24udGFyZ2V0Py5kaXNwYXRjaEV2ZW50KHMpfX0pO28odGhpcyx5LChuLGUsaSx1KT0+dCh0aGlzLGMpW3QodGhpcyxhKV0uaW5zdGFuY2Vbbl0oZSxpLHUpKTtvKHRoaXMsZywobixlLGksdSk9PntsZXQgcz1gJHtufV8ke2V9YCxrPXQodGhpcyx5KS5jYWxsKHRoaXMsbixlLGksdSk7cmV0dXJuIHQodGhpcyxoKVtzXT17ZnVuYzpuLGFyZ3M6W2UsaSx1XSx1bnN1YnNjcmliZTprfSwoKT0+e3QodGhpcyxoKVtzXS51bnN1YnNjcmliZSgpLGRlbGV0ZSB0KHRoaXMsaClbc119fSk7aWYoIWl8fCFpLmJhY2tlbmRzfHxpLmJhY2tlbmRzLmxlbmd0aDwxKXRocm93IG5ldyBFcnJvcihgWW91IG11c3Qgc3BlY2lmeSBhdCBsZWFzdCBvbmUgQmFja2VuZCwgaWYgeW91IGFyZSBjb21pbmcgZnJvbSAyLngueCAob3IgZG9uJ3QgdW5kZXJzdGFuZCB0aGlzIGVycm9yKVxuICAgICAgICBzZWUgdGhpcyBndWlkZTogaHR0cHM6Ly9naXRodWIuY29tL2xvdWlzYnJ1bm5lci9kbmQtbXVsdGktYmFja2VuZC90cmVlL21hc3Rlci9wYWNrYWdlcy9yZWFjdC1kbmQtbXVsdGktYmFja2VuZCNtaWdyYXRpbmctZnJvbS0yeHhgKTtwKHRoaXMsZixuZXcgYikscCh0aGlzLGMse30pLHAodGhpcyxkLFtdKSxpLmJhY2tlbmRzLmZvckVhY2godT0+e2xldCBzPXQodGhpcyx4KS5jYWxsKHRoaXMsbixlLHUpO3QodGhpcyxjKVtzLmlkXT1zLHQodGhpcyxkKS5wdXNoKHMpfSkscCh0aGlzLGEsdCh0aGlzLGQpWzBdLmlkKSxwKHRoaXMsaCx7fSl9fTthPW5ldyBXZWFrTWFwLGY9bmV3IFdlYWtNYXAsYz1uZXcgV2Vha01hcCxkPW5ldyBXZWFrTWFwLGg9bmV3IFdlYWtNYXAseD1uZXcgV2Vha01hcCxUPW5ldyBXZWFrTWFwLEU9bmV3IFdlYWtNYXAsdj1uZXcgV2Vha01hcCx5PW5ldyBXZWFrTWFwLGc9bmV3IFdlYWtNYXAsbC5pc1NldFVwPSExO3ZhciBNPWw7dmFyIFA9KHIsbixlKT0+bmV3IE0ocixuLGUpO3ZhciBtPShyLG4pPT4oe2V2ZW50OnIsY2hlY2s6bn0pO3ZhciBTPW0oXCJ0b3VjaHN0YXJ0XCIscj0+e2xldCBuPXI7cmV0dXJuIG4udG91Y2hlcyE9PW51bGwmJm4udG91Y2hlcyE9PXZvaWQgMH0pLEw9bShcImRyYWdzdGFydFwiLHI9PnIudHlwZS5pbmRleE9mKFwiZHJhZ1wiKSE9PS0xfHxyLnR5cGUuaW5kZXhPZihcImRyb3BcIikhPT0tMSksTz1tKFwibW91c2Vkb3duXCIscj0+ci50eXBlLmluZGV4T2YoXCJ0b3VjaFwiKT09PS0xJiZyLnR5cGUuaW5kZXhPZihcIm1vdXNlXCIpIT09LTEpLEM9bShcInBvaW50ZXJkb3duXCIscj0+ci5wb2ludGVyVHlwZT09XCJtb3VzZVwiKTtleHBvcnR7TCBhcyBIVE1MNURyYWdUcmFuc2l0aW9uLE8gYXMgTW91c2VUcmFuc2l0aW9uLFAgYXMgTXVsdGlCYWNrZW5kLEMgYXMgUG9pbnRlclRyYW5zaXRpb24sUyBhcyBUb3VjaFRyYW5zaXRpb24sbSBhcyBjcmVhdGVUcmFuc2l0aW9ufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/dnd-multi-backend/dist/index.js\n");

/***/ })

};
;